/***************COLOR SCHEME *****************
**********************************************
#EDF67D = Sunny  Yellow
#71A9F7 = French Sky Blue
#764134 = Bole | brown-er rust
#AD343E = Sweet Brown | vintage red
#666666 = Granite Gray
  border-width: 0px;
  button text --> font-weight: 300;
**********************************************
**********************************************
*/

#pageContent {
  margin-top: 0% !important;
}

#map {
        height: 500px;
      }

.tile{
  height: 225px;
}

body{
	color: white;
	background: #666666 !important;
}

span{

  color:black;
}

h4{
  color: black;
}
.navbar-brand{
font-weight: 300;
font-style: italic;

}
.headline{
	text-align: center;
}

.demo-tiles{
margin: 2% auto 2%;


}


.btn-primary {
  color: white;
  background-color: #E67F0D;
  border-width: 0px;
  font-weight: 300;
  -o-transition: background 0.1s ease-in, background 0.1s ease-out;
  -ms-transition: background 0.1s ease-in;
  -moz-transition: background 0.1s ease-in;
  -webkit-transition: background 0.1s ease-in;
  /* ...and now override with proper CSS property */
  transition:background 0.15s ease-in, background 0.15s ease-out;
}
.btn-primary:hover,
.btn-primary:focus,
.btn-primary:active,
.btn-primary.active,
.open .dropdown-toggle.btn-primary {
  color: white;
  background-color: rgba(113, 169, 247, 0.5);
}


.btn-default, .btn-secondary {
  color: white;
  background-color: #AD343E ;
  border-width: 0px;
  font-weight: 300;
  -o-transition: background 0.1s ease-in, background 0.1s ease-out;
  -ms-transition: background 0.1s ease-in;
  -moz-transition: background 0.1s ease-in;
  -webkit-transition: background 0.1s ease-in;
  /* ...and now override with proper CSS property */
  transition:background 0.15s ease-in, background 0.15s ease-out;
}
.btn-default:hover,
.btn-default:focus,
.btn-default:active,
.btn-secondary:hover,
.btn-secondary:focus,
.btn-secondary:active,
.btn-secondary.active,
.open .dropdown-toggle.btn-secondary {
	color: white;
	background-color: rgba(173, 52, 62, 0.5); 
}

#world {
	width: 400px;
  	height: 400px;
  	border-style: solid;
	border-width: 60px;
	border-radius: 50%;
	border-color: #666666;
	overflow:hidden;
}

#globe {
  text-align: center;
  position: relative;
  top: 0;
  right: 0;
  bottom: 0;
  left: 5%;
  width: 10000px;
  height: 400px;
  margin: auto;
  background-repeat: repeat-x;
  background-blend-mode: difference;
  overflow:hidden;
}


.globe {
   opacity:1.0;
   z-index:-10;
   background-image: url(../img/world_map.png),
   linear-gradient(45deg, black 0%, transparent 0%),
   linear-gradient(-45deg, black 0%, transparent 0%);
   overflow: hidden;

  -webkit-animation-name: MOVE;
  -webkit-animation-duration: 300s;
  -webkit-animation-timing-function: linear;
  -webkit-animation-iteration-count: infinite;
}

@-webkit-keyframes MOVE {
   from {
     -webkit-transform: translateX(0);
   }
   to { 
     -webkit-transform: translateX(-187%);
   }
}

.icon{
  transform: scale(0.2, 0.2);
}

#login {
margin-top: 20%;

}

label {
 font-weight: 300;

}

legend{
 font-weight: 600;
}

.selectpicker{

color: black;

}

#pageContent{
  margin-top: 10%;
}

#language1, #language2, #jobName, #timeEllapsed{
  font-size: 26;
  font-weight: 700;
  color: #764134;

}
#timer{
  font-size: 18;
  color: #AD343E;
  font-weight: 900;
}

#jobTitle{
  color: #71A9F7;

}


.form-group{
margin-top: -2%;
margin-bottom: -1%;

}

.form-top{

margin-bottom: -5%;
}
.form-password{
margin-top: 2%;
}
.form-bottom{
margin-top: 5%;
margin-bottom: 1%;

}

.btn-container{
  margin-top: 5%;
}





.mars {
    
    /* 
     * Make the initial position to be the center of the circle you want this
     * object follow.
     */
    position: absolute;
    left: 315px;
    top: 143px;

    /*
     * Sets up the animation duration, timing-function (or easing)
     * and iteration-count. Ensure you use the appropriate vendor-specific 
     * prefixes as well as the official syntax for now. Remember, tools like 
     * CSS Please are your friends!
     */
    -webkit-animation: myOrbit 2s linear infinite; /* Chrome, Safari 5 */
       -moz-animation: myOrbit 2s linear infinite; /* Firefox 5-15 */
         -o-animation: myOrbit 2s linear infinite; /* Opera 12+ */
            animation: myOrbit 2s linear infinite; /* Chrome, Firefox 16+, 
                                                      IE 10+, Safari 5 */ 
}

/*
 * Set up the keyframes to actually describe the begining and end states of 
 * the animation.  The browser will interpolate all the frames between these 
 * points.  Again, remember your vendor-specific prefixes for now!
 */
@-webkit-keyframes myOrbit {
    from { -webkit-transform: rotate(0deg) translateX(100px) rotate(0deg); }
    to   { -webkit-transform: rotate(360deg) translateX(100px) rotate(-360deg); }
}

@-moz-keyframes myOrbit {
    from { -moz-transform: rotate(0deg) translateX(100px) rotate(0deg); }
    to   { -moz-transform: rotate(360deg) translateX(100px) rotate(-360deg); }
}

@-o-keyframes myOrbit {
    from { -o-transform: rotate(0deg) translateX(100px) rotate(0deg); }
    to   { -o-transform: rotate(360deg) translateX(100px) rotate(-360deg); }
}

@keyframes myOrbit {
    from { transform: rotate(0deg) translateX(100px) rotate(0deg); }
    to   { transform: rotate(360deg) translateX(100px) rotate(-360deg); }
}

.earth {
    
    /* 
     * Make the initial position to be the center of the circle you want this
     * object follow.
     */
    position: absolute;
    left: 315px;
    top: 143px;
  
    /*
     * Sets up the animation duration, timing-function (or easing)
     * and iteration-count. Ensure you use the appropriate vendor-specific 
     * prefixes as well as the official syntax for now. Remember, tools like 
     * CSS Please are your friends!
     */
    -webkit-animation: earthOrbit 2s linear infinite; /* Chrome, Safari 5 */
       -moz-animation: earthOrbit 2s linear infinite; /* Firefox 5-15 */
         -o-animation: earthOrbit 2s linear infinite; /* Opera 12+ */
            animation: earthOrbit 2s linear infinite;
            animation-delay: earthOrbi 0.68s linear infinite;            /* Chrome, Firefox 16+, 
      -webkit-animation: earthOrbit 2s linear infinite; /* Chrome, Safari 5 */
       -moz-animation: earthOrbi 3s linear infinite; /* Firefox 5-15 */
         -o-animation: earthOrbi 3s linear infinite; /* Opera 12+ */
            animation: earthOrbi 3s linear infinite;                                                 IE 10+, Safari 5 */
    
    
    
}

/*
 * Set up the keyframes to actually describe the begining and end states of 
 * the animation.  The browser will interpolate all the frames between these 
 * points.  Again, remember your vendor-specific prefixes for now!
 */
@-webkit-keyframes earthOrbit {
    from { -webkit-transform: rotate(0deg) translateX(50px) rotate(0deg); }
    to   { -webkit-transform: rotate(360deg) translateX(50px) rotate(-360deg); }

}

@-moz-keyframes earthOrbit {
    from { -moz-transform: rotate(0deg) translateX(50px) rotate(0deg); }
    to   { -moz-transform: rotate(360deg) translateX(50px) rotate(-360deg); }
}

@-o-keyframes earthOrbit {
    from { -o-transform: rotate(0deg) translateX(50px) rotate(0deg); }
    to   { -o-transform: rotate(360deg) translateX(50px) rotate(-360deg); }
}

@keyframes earthOrbit {
    from { transform: rotate(0deg) translateX(50px) rotate(0deg); }
    to   { transform: rotate(360deg) translateX(50px) rotate(-360deg); }
}
@-webkit-keyframes earthOrbi {
    from { -webkit-transform: rotate(0deg) translateX(100px) rotate(0deg); }
    to   { -webkit-transform: rotate(360deg) translateX(50px) rotate(-360deg); }

}

@-moz-keyframes earthOrbi {
    from { -moz-transform: rotate(0deg) translateX(100px) rotate(0deg); }
    to   { -moz-transform: rotate(360deg) translateX(5px) rotate(-360deg); }
}

@-o-keyframes earthOrbi {
    from { -o-transform: rotate(0deg) translateX(100px) rotate(0deg); }
    to   { -o-transform: rotate(360deg) translateX(5px) rotate(-360deg); }
}

@keyframes earthOrbi {
    from { transform: rotate(0deg) translateX(100px) rotate(0deg); }
    to   { transform: rotate(360deg) translateX(5px) rotate(-360deg); }
}







@keyframes circle { 
  to { transform: rotate(1turn); } 
}
@keyframes updown {
  to { transform: translateY(200px); } 
}
figure {
  animation: updown 1s infinite ease-in-out alternate;
}
.earth {
  width: 50px; height: 50px;
  border-radius: 50%; background: red;
  transform-origin: center 300%;
  animation: circle 5s infinite linear;
}
.saturn {
  width: 50px; height: 50px;
  border-radius: 50%; background: red;
  transform-origin: center -100%;
  animation: circle 2s infinite linear;
}

